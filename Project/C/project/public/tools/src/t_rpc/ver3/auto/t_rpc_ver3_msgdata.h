/*
 * Copyright (c) 2022 Renwei
 *
 * This is a free software; you can redistribute it and/or modify
 * it under the terms of the MIT license. See LICENSE for details.
 *
 * ############################# IMPORTANT INFORMATION ############################
 * The code of this file is automatically generated by tools(Tools/auto_code),
 * please do not modify it manually!
 * ############################# IMPORTANT INFORMATION ############################
 * ================================================================================
 */

#ifndef _T_RPC_MSGDATA_H__
#define _T_RPC_MSGDATA_H__
#include "dave_base.h"
#include "cv_msg.h"
#include "database_msg.h"
#include "dave_application.h"
#include "dave_general_main.h"
#include "http_msg.h"
#include "uip_msg.h"
#include "aix_msg.h"
#include "bbs_msg.h"
#include "dave_bdata.h"
#include "base_msg.h"
#include "base_socket.h"

void * t_rpc_ver3_zip_AIXMsgAestheticsReq(AIXMsgAestheticsReq *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_AIXMsgAestheticsReq(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_AIXMsgAestheticsRsp(AIXMsgAestheticsRsp *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_AIXMsgAestheticsRsp(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_AIXMsgImageClassificationReq(AIXMsgImageClassificationReq *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_AIXMsgImageClassificationReq(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_AIXMsgImageClassificationRsp(AIXMsgImageClassificationRsp *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_AIXMsgImageClassificationRsp(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_AppMsgFunctionRegReq(AppMsgFunctionRegReq *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_AppMsgFunctionRegReq(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_AppMsgFunctionRegRsp(AppMsgFunctionRegRsp *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_AppMsgFunctionRegRsp(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_AppMsgFunctionUnRegReq(AppMsgFunctionUnRegReq *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_AppMsgFunctionUnRegReq(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_AppMsgFunctionUnRegRsp(AppMsgFunctionUnRegRsp *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_AppMsgFunctionUnRegRsp(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_AppMsgMCardReq(AppMsgMCardReq *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_AppMsgMCardReq(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_AppMsgMCardRsp(AppMsgMCardRsp *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_AppMsgMCardRsp(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_AppMsgTalkMCardReq(AppMsgTalkMCardReq *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_AppMsgTalkMCardReq(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_AppMsgTalkMCardRsp(AppMsgTalkMCardRsp *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_AppMsgTalkMCardRsp(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_BBSMsgAddCommentReq(BBSMsgAddCommentReq *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_BBSMsgAddCommentReq(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_BBSMsgAddCommentRsp(BBSMsgAddCommentRsp *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_BBSMsgAddCommentRsp(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_BBSMsgInqCommentReq(BBSMsgInqCommentReq *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_BBSMsgInqCommentReq(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_BBSMsgInqCommentRsp(BBSMsgInqCommentRsp *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_BBSMsgInqCommentRsp(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_BdataMCardRecord(BdataMCardRecord *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_BdataMCardRecord(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_BdataTalkRecord(BdataTalkRecord *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_BdataTalkRecord(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_CFGUpdate(CFGUpdate *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_CFGUpdate(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_CVMsgFeaturesDetectedReq(CVMsgFeaturesDetectedReq *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_CVMsgFeaturesDetectedReq(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_CVMsgFeaturesDetectedRsp(CVMsgFeaturesDetectedRsp *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_CVMsgFeaturesDetectedRsp(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_CVMsgImageSearchReq(CVMsgImageSearchReq *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_CVMsgImageSearchReq(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_CVMsgImageSearchRsp(CVMsgImageSearchRsp *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_CVMsgImageSearchRsp(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_CVMsgPaintingAestheticsReq(CVMsgPaintingAestheticsReq *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_CVMsgPaintingAestheticsReq(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_CVMsgPaintingAestheticsRsp(CVMsgPaintingAestheticsRsp *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_CVMsgPaintingAestheticsRsp(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_CVMsgSculpturesSearchReq(CVMsgSculpturesSearchReq *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_CVMsgSculpturesSearchReq(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_CVMsgSculpturesSearchRsp(CVMsgSculpturesSearchRsp *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_CVMsgSculpturesSearchRsp(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_ClientBusy(ClientBusy *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_ClientBusy(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_ClientIdle(ClientIdle *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_ClientIdle(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_CoroutineWakeup(CoroutineWakeup *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_CoroutineWakeup(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_DBHybridAddListReq(DBHybridAddListReq *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_DBHybridAddListReq(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_DBHybridAddListRsp(DBHybridAddListRsp *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_DBHybridAddListRsp(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_DBHybridInqListReq(DBHybridInqListReq *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_DBHybridInqListReq(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_DBHybridInqListRsp(DBHybridInqListRsp *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_DBHybridInqListRsp(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_DBNosqlAddTalkReq(DBNosqlAddTalkReq *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_DBNosqlAddTalkReq(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_DBNosqlAddTalkRsp(DBNosqlAddTalkRsp *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_DBNosqlAddTalkRsp(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_DBRedisDelTableReq(DBRedisDelTableReq *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_DBRedisDelTableReq(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_DBRedisDelTableRsp(DBRedisDelTableRsp *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_DBRedisDelTableRsp(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_DBSysAddImageFeatureReq(DBSysAddImageFeatureReq *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_DBSysAddImageFeatureReq(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_DBSysAddImageFeatureRsp(DBSysAddImageFeatureRsp *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_DBSysAddImageFeatureRsp(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_DBSysAddWeiChatReq(DBSysAddWeiChatReq *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_DBSysAddWeiChatReq(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_DBSysAddWeiChatRsp(DBSysAddWeiChatRsp *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_DBSysAddWeiChatRsp(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_DBSysInqChannelReq(DBSysInqChannelReq *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_DBSysInqChannelReq(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_DBSysInqChannelRsp(DBSysInqChannelRsp *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_DBSysInqChannelRsp(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_DBSysInqImageFeatureReq(DBSysInqImageFeatureReq *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_DBSysInqImageFeatureReq(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_DBSysInqImageFeatureRsp(DBSysInqImageFeatureRsp *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_DBSysInqImageFeatureRsp(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_DBSysInqImageReq(DBSysInqImageReq *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_DBSysInqImageReq(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_DBSysInqImageRsp(DBSysInqImageRsp *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_DBSysInqImageRsp(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_DBSysInqMuseumPageReq(DBSysInqMuseumPageReq *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_DBSysInqMuseumPageReq(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_DBSysInqMuseumPageRsp(DBSysInqMuseumPageRsp *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_DBSysInqMuseumPageRsp(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_DBSysInqMuseumReq(DBSysInqMuseumReq *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_DBSysInqMuseumReq(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_DBSysInqMuseumRsp(DBSysInqMuseumRsp *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_DBSysInqMuseumRsp(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_DBSysInqPainterPageReq(DBSysInqPainterPageReq *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_DBSysInqPainterPageReq(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_DBSysInqPainterPageRsp(DBSysInqPainterPageRsp *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_DBSysInqPainterPageRsp(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_DBSysInqWeiChatReq(DBSysInqWeiChatReq *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_DBSysInqWeiChatReq(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_DBSysInqWeiChatRsp(DBSysInqWeiChatRsp *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_DBSysInqWeiChatRsp(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_DebugReq(DebugReq *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_DebugReq(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_DebugRsp(DebugRsp *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_DebugRsp(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_HTTPCloseReq(HTTPCloseReq *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_HTTPCloseReq(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_HTTPCloseRsp(HTTPCloseRsp *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_HTTPCloseRsp(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_HTTPListenReq(HTTPListenReq *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_HTTPListenReq(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_HTTPListenRsp(HTTPListenRsp *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_HTTPListenRsp(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_HTTPPostReq(HTTPPostReq *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_HTTPPostReq(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_HTTPPostRsp(HTTPPostRsp *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_HTTPPostRsp(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_HTTPRecvReq(HTTPRecvReq *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_HTTPRecvReq(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_HTTPRecvRsp(HTTPRecvRsp *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_HTTPRecvRsp(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_InternalEvents(InternalEvents *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_InternalEvents(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_InternalLoop(InternalLoop *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_InternalLoop(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_MainMsgPythonReq(MainMsgPythonReq *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_MainMsgPythonReq(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_MainMsgPythonRsp(MainMsgPythonRsp *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_MainMsgPythonRsp(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_MemoryWarning(MemoryWarning *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_MemoryWarning(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_MsgBlocksReq(MsgBlocksReq *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_MsgBlocksReq(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_MsgBlocksRsp(MsgBlocksRsp *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_MsgBlocksRsp(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_MsgIdEcho(MsgIdEcho *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_MsgIdEcho(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_MsgOSNotify(MsgOSNotify *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_MsgOSNotify(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_POWEROFFMSG(POWEROFFMSG *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_POWEROFFMSG(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_ProcessMsgTimerOutMsg(ProcessMsgTimerOutMsg *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_ProcessMsgTimerOutMsg(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_RESTARTREQMSG(RESTARTREQMSG *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_RESTARTREQMSG(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_RESTARTRSPMSG(RESTARTRSPMSG *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_RESTARTRSPMSG(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_RPCDebugReq(RPCDebugReq *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_RPCDebugReq(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_RPCDebugRsp(RPCDebugRsp *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_RPCDebugRsp(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_RUNFUNCTIONMSG(RUNFUNCTIONMSG *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_RUNFUNCTIONMSG(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_SocketBindReq(SocketBindReq *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_SocketBindReq(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_SocketBindRsp(SocketBindRsp *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_SocketBindRsp(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_SocketConnectReq(SocketConnectReq *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_SocketConnectReq(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_SocketConnectRsp(SocketConnectRsp *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_SocketConnectRsp(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_SocketDisconnectReq(SocketDisconnectReq *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_SocketDisconnectReq(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_SocketDisconnectRsp(SocketDisconnectRsp *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_SocketDisconnectRsp(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_SocketNotify(SocketNotify *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_SocketNotify(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_SocketPlugIn(SocketPlugIn *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_SocketPlugIn(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_SocketPlugOut(SocketPlugOut *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_SocketPlugOut(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_SocketRawEvent(SocketRawEvent *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_SocketRawEvent(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_SocketRead(SocketRead *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_SocketRead(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_SocketWrite(SocketWrite *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_SocketWrite(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_SystemDecoupling(SystemDecoupling *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_SystemDecoupling(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_SystemMount(SystemMount *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_SystemMount(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_TESTMSG(TESTMSG *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_TESTMSG(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_TIMERMSG(TIMERMSG *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_TIMERMSG(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_TemporarilyDefineMessageMsg(TemporarilyDefineMessageMsg *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_TemporarilyDefineMessageMsg(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_ThreadBusy(ThreadBusy *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_ThreadBusy(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_ThreadIdle(ThreadIdle *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_ThreadIdle(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_ThreadLocalReadyMsg(ThreadLocalReadyMsg *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_ThreadLocalReadyMsg(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_ThreadLocalRemoveMsg(ThreadLocalRemoveMsg *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_ThreadLocalRemoveMsg(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_ThreadRemoteIDReadyMsg(ThreadRemoteIDReadyMsg *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_ThreadRemoteIDReadyMsg(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_ThreadRemoteIDRemoveMsg(ThreadRemoteIDRemoveMsg *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_ThreadRemoteIDRemoveMsg(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_ThreadRemoteReadyMsg(ThreadRemoteReadyMsg *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_ThreadRemoteReadyMsg(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_ThreadRemoteRemoveMsg(ThreadRemoteRemoveMsg *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_ThreadRemoteRemoveMsg(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_TraceSwitchMsg(TraceSwitchMsg *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_TraceSwitchMsg(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_UIPDataRecvReq(UIPDataRecvReq *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_UIPDataRecvReq(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_UIPDataRecvRsp(UIPDataRecvRsp *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_UIPDataRecvRsp(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_UIPDataSendReq(UIPDataSendReq *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_UIPDataSendReq(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_UIPDataSendRsp(UIPDataSendRsp *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_UIPDataSendRsp(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_UIPRegisterReq(UIPRegisterReq *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_UIPRegisterReq(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_UIPRegisterRsp(UIPRegisterRsp *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_UIPRegisterRsp(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_UIPUnregisterReq(UIPUnregisterReq *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_UIPUnregisterReq(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_UIPUnregisterRsp(UIPUnregisterRsp *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_UIPUnregisterRsp(void **unzip_data, ub *unzip_len, void *pStructBson);

void * t_rpc_ver3_zip_WAKEUPMSG(WAKEUPMSG *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_WAKEUPMSG(void **unzip_data, ub *unzip_len, void *pStructBson);

#endif

