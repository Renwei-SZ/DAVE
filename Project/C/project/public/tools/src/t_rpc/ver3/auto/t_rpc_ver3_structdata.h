/*
 * Copyright (c) 2023 Renwei
 *
 * This is a free software; you can redistribute it and/or modify
 * it under the terms of the MIT license. See LICENSE for details.
 *
 * ############################# IMPORTANT INFORMATION ############################
 * The code of this file is automatically generated by tools(Tools/auto_code),
 * please do not modify it manually!
 * ############################# IMPORTANT INFORMATION ############################
 * ================================================================================
 */

#ifndef _T_RPC_STRUCTDATA_H__
#define _T_RPC_STRUCTDATA_H__
#include "dave_base.h"
#include "cv_param.h"
#include "dave_mcard.h"
#include "dave_struct.h"
#include "http_param.h"
#include "base_struct.h"

void * t_rpc_ver3_zip_MCardVerText(MCardVerText *zip_data);
dave_bool t_rpc_ver3_unzip_MCardVerText(MCardVerText *unzip_data, void *pStructBson);

void * t_rpc_ver3_zip_MCardVerText_d(MCardVerText *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_MCardVerText_d(MCardVerText *unzip_data, ub unzip_len, void *pArrayBson);

void * t_rpc_ver3_zip_MCardVerMedia(MCardVerMedia *zip_data);
dave_bool t_rpc_ver3_unzip_MCardVerMedia(MCardVerMedia *unzip_data, void *pStructBson);

void * t_rpc_ver3_zip_MCardVerMedia_d(MCardVerMedia *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_MCardVerMedia_d(MCardVerMedia *unzip_data, ub unzip_len, void *pArrayBson);

void * t_rpc_ver3_zip_MCardVerTalk(MCardVerTalk *zip_data);
dave_bool t_rpc_ver3_unzip_MCardVerTalk(MCardVerTalk *unzip_data, void *pStructBson);

void * t_rpc_ver3_zip_MCardVerTalk_d(MCardVerTalk *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_MCardVerTalk_d(MCardVerTalk *unzip_data, ub unzip_len, void *pArrayBson);

void * t_rpc_ver3_zip_MCardVerComment(MCardVerComment *zip_data);
dave_bool t_rpc_ver3_unzip_MCardVerComment(MCardVerComment *unzip_data, void *pStructBson);

void * t_rpc_ver3_zip_MCardVerComment_d(MCardVerComment *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_MCardVerComment_d(MCardVerComment *unzip_data, ub unzip_len, void *pArrayBson);

void * t_rpc_ver3_zip_CVModelResult(CVModelResult *zip_data);
dave_bool t_rpc_ver3_unzip_CVModelResult(CVModelResult *unzip_data, void *pStructBson);

void * t_rpc_ver3_zip_CVModelResult_d(CVModelResult *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_CVModelResult_d(CVModelResult *unzip_data, ub unzip_len, void *pArrayBson);

void * t_rpc_ver3_zip_TerminalInformation(TerminalInformation *zip_data);
dave_bool t_rpc_ver3_unzip_TerminalInformation(TerminalInformation *unzip_data, void *pStructBson);

void * t_rpc_ver3_zip_TerminalInformation_d(TerminalInformation *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_TerminalInformation_d(TerminalInformation *unzip_data, ub unzip_len, void *pArrayBson);

void * t_rpc_ver3_zip_PainterIntroduction(PainterIntroduction *zip_data);
dave_bool t_rpc_ver3_unzip_PainterIntroduction(PainterIntroduction *unzip_data, void *pStructBson);

void * t_rpc_ver3_zip_PainterIntroduction_d(PainterIntroduction *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_PainterIntroduction_d(PainterIntroduction *unzip_data, ub unzip_len, void *pArrayBson);

void * t_rpc_ver3_zip_SocNetInfoAddr(SocNetInfoAddr *zip_data);
dave_bool t_rpc_ver3_unzip_SocNetInfoAddr(SocNetInfoAddr *unzip_data, void *pStructBson);

void * t_rpc_ver3_zip_SocNetInfoAddr_d(SocNetInfoAddr *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_SocNetInfoAddr_d(SocNetInfoAddr *unzip_data, ub unzip_len, void *pArrayBson);

void * t_rpc_ver3_zip_SocNetInfoIp(SocNetInfoIp *zip_data);
dave_bool t_rpc_ver3_unzip_SocNetInfoIp(SocNetInfoIp *unzip_data, void *pStructBson);

void * t_rpc_ver3_zip_SocNetInfoIp_d(SocNetInfoIp *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_SocNetInfoIp_d(SocNetInfoIp *unzip_data, ub unzip_len, void *pArrayBson);

void * t_rpc_ver3_zip_MCardLocation(MCardLocation *zip_data);
dave_bool t_rpc_ver3_unzip_MCardLocation(MCardLocation *unzip_data, void *pStructBson);

void * t_rpc_ver3_zip_MCardLocation_d(MCardLocation *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_MCardLocation_d(MCardLocation *unzip_data, ub unzip_len, void *pArrayBson);

void * t_rpc_ver3_zip_MCardTime(MCardTime *zip_data);
dave_bool t_rpc_ver3_unzip_MCardTime(MCardTime *unzip_data, void *pStructBson);

void * t_rpc_ver3_zip_MCardTime_d(MCardTime *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_MCardTime_d(MCardTime *unzip_data, ub unzip_len, void *pArrayBson);

void * t_rpc_ver3_zip_MCardPOI(MCardPOI *zip_data);
dave_bool t_rpc_ver3_unzip_MCardPOI(MCardPOI *unzip_data, void *pStructBson);

void * t_rpc_ver3_zip_MCardPOI_d(MCardPOI *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_MCardPOI_d(MCardPOI *unzip_data, ub unzip_len, void *pArrayBson);

void * t_rpc_ver3_zip_MCardContent(MCardContent *zip_data);
dave_bool t_rpc_ver3_unzip_MCardContent(MCardContent *unzip_data, void *pStructBson);

void * t_rpc_ver3_zip_MCardContent_d(MCardContent *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_MCardContent_d(MCardContent *unzip_data, ub unzip_len, void *pArrayBson);

void * t_rpc_ver3_zip_MCardCommentHead(MCardCommentHead *zip_data);
dave_bool t_rpc_ver3_unzip_MCardCommentHead(MCardCommentHead *unzip_data, void *pStructBson);

void * t_rpc_ver3_zip_MCardCommentHead_d(MCardCommentHead *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_MCardCommentHead_d(MCardCommentHead *unzip_data, ub unzip_len, void *pArrayBson);

void * t_rpc_ver3_zip_CVRectangle(CVRectangle *zip_data);
dave_bool t_rpc_ver3_unzip_CVRectangle(CVRectangle *unzip_data, void *pStructBson);

void * t_rpc_ver3_zip_CVRectangle_d(CVRectangle *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_CVRectangle_d(CVRectangle *unzip_data, ub unzip_len, void *pArrayBson);

void * t_rpc_ver3_zip_NoSQLHead(NoSQLHead *zip_data);
dave_bool t_rpc_ver3_unzip_NoSQLHead(NoSQLHead *unzip_data, void *pStructBson);

void * t_rpc_ver3_zip_NoSQLHead_d(NoSQLHead *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_NoSQLHead_d(NoSQLHead *unzip_data, ub unzip_len, void *pArrayBson);

void * t_rpc_ver3_zip_MCardCommentHeadData(MCardCommentHeadData *zip_data);
dave_bool t_rpc_ver3_unzip_MCardCommentHeadData(MCardCommentHeadData *unzip_data, void *pStructBson);

void * t_rpc_ver3_zip_MCardCommentHeadData_d(MCardCommentHeadData *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_MCardCommentHeadData_d(MCardCommentHeadData *unzip_data, ub unzip_len, void *pArrayBson);

void * t_rpc_ver3_zip_UserInformation(UserInformation *zip_data);
dave_bool t_rpc_ver3_unzip_UserInformation(UserInformation *unzip_data, void *pStructBson);

void * t_rpc_ver3_zip_UserInformation_d(UserInformation *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_UserInformation_d(UserInformation *unzip_data, ub unzip_len, void *pArrayBson);

void * t_rpc_ver3_zip_MBUF(MBUF *zip_data);
dave_bool t_rpc_ver3_unzip_MBUF(MBUF *unzip_data, void *pStructBson);

void * t_rpc_ver3_zip_MBUF_d(MBUF *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_MBUF_d(MBUF *unzip_data, ub unzip_len, void *pArrayBson);

void * t_rpc_ver3_zip_GPSLocation(GPSLocation *zip_data);
dave_bool t_rpc_ver3_unzip_GPSLocation(GPSLocation *unzip_data, void *pStructBson);

void * t_rpc_ver3_zip_GPSLocation_d(GPSLocation *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_GPSLocation_d(GPSLocation *unzip_data, ub unzip_len, void *pArrayBson);

void * t_rpc_ver3_zip_MCard(MCard *zip_data);
dave_bool t_rpc_ver3_unzip_MCard(MCard *unzip_data, void *pStructBson);

void * t_rpc_ver3_zip_MCard_d(MCard *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_MCard_d(MCard *unzip_data, ub unzip_len, void *pArrayBson);

void * t_rpc_ver3_zip_DateStruct(DateStruct *zip_data);
dave_bool t_rpc_ver3_unzip_DateStruct(DateStruct *unzip_data, void *pStructBson);

void * t_rpc_ver3_zip_DateStruct_d(DateStruct *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_DateStruct_d(DateStruct *unzip_data, ub unzip_len, void *pArrayBson);

void * t_rpc_ver3_zip_CVResult(CVResult *zip_data);
dave_bool t_rpc_ver3_unzip_CVResult(CVResult *unzip_data, void *pStructBson);

void * t_rpc_ver3_zip_CVResult_d(CVResult *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_CVResult_d(CVResult *unzip_data, ub unzip_len, void *pArrayBson);

void * t_rpc_ver3_zip_UniversalLabel(UniversalLabel *zip_data);
dave_bool t_rpc_ver3_unzip_UniversalLabel(UniversalLabel *unzip_data, void *pStructBson);

void * t_rpc_ver3_zip_UniversalLabel_d(UniversalLabel *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_UniversalLabel_d(UniversalLabel *unzip_data, ub unzip_len, void *pArrayBson);

void * t_rpc_ver3_zip_CVKeyPoint(CVKeyPoint *zip_data);
dave_bool t_rpc_ver3_unzip_CVKeyPoint(CVKeyPoint *unzip_data, void *pStructBson);

void * t_rpc_ver3_zip_CVKeyPoint_d(CVKeyPoint *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_CVKeyPoint_d(CVKeyPoint *unzip_data, ub unzip_len, void *pArrayBson);

void * t_rpc_ver3_zip_OpenCVMat(OpenCVMat *zip_data);
dave_bool t_rpc_ver3_unzip_OpenCVMat(OpenCVMat *unzip_data, void *pStructBson);

void * t_rpc_ver3_zip_OpenCVMat_d(OpenCVMat *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_OpenCVMat_d(OpenCVMat *unzip_data, ub unzip_len, void *pArrayBson);

void * t_rpc_ver3_zip_WeiChatUserInfo(WeiChatUserInfo *zip_data);
dave_bool t_rpc_ver3_unzip_WeiChatUserInfo(WeiChatUserInfo *unzip_data, void *pStructBson);

void * t_rpc_ver3_zip_WeiChatUserInfo_d(WeiChatUserInfo *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_WeiChatUserInfo_d(WeiChatUserInfo *unzip_data, ub unzip_len, void *pArrayBson);

void * t_rpc_ver3_zip_ImageIntroduction(ImageIntroduction *zip_data);
dave_bool t_rpc_ver3_unzip_ImageIntroduction(ImageIntroduction *unzip_data, void *pStructBson);

void * t_rpc_ver3_zip_ImageIntroduction_d(ImageIntroduction *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_ImageIntroduction_d(ImageIntroduction *unzip_data, ub unzip_len, void *pArrayBson);

void * t_rpc_ver3_zip_MuseumIntroduction(MuseumIntroduction *zip_data);
dave_bool t_rpc_ver3_unzip_MuseumIntroduction(MuseumIntroduction *unzip_data, void *pStructBson);

void * t_rpc_ver3_zip_MuseumIntroduction_d(MuseumIntroduction *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_MuseumIntroduction_d(MuseumIntroduction *unzip_data, ub unzip_len, void *pArrayBson);

void * t_rpc_ver3_zip_HttpKeyValue(HttpKeyValue *zip_data);
dave_bool t_rpc_ver3_unzip_HttpKeyValue(HttpKeyValue *unzip_data, void *pStructBson);

void * t_rpc_ver3_zip_HttpKeyValue_d(HttpKeyValue *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_HttpKeyValue_d(HttpKeyValue *unzip_data, ub unzip_len, void *pArrayBson);

void * t_rpc_ver3_zip_MsgIdEcho(MsgIdEcho *zip_data);
dave_bool t_rpc_ver3_unzip_MsgIdEcho(MsgIdEcho *unzip_data, void *pStructBson);

void * t_rpc_ver3_zip_MsgIdEcho_d(MsgIdEcho *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_MsgIdEcho_d(MsgIdEcho *unzip_data, ub unzip_len, void *pArrayBson);

void * t_rpc_ver3_zip_SocNetInfo(SocNetInfo *zip_data);
dave_bool t_rpc_ver3_unzip_SocNetInfo(SocNetInfo *unzip_data, void *pStructBson);

void * t_rpc_ver3_zip_SocNetInfo_d(SocNetInfo *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_SocNetInfo_d(SocNetInfo *unzip_data, ub unzip_len, void *pArrayBson);

void * t_rpc_ver3_zip_IPBaseInfo(IPBaseInfo *zip_data);
dave_bool t_rpc_ver3_unzip_IPBaseInfo(IPBaseInfo *unzip_data, void *pStructBson);

void * t_rpc_ver3_zip_IPBaseInfo_d(IPBaseInfo *zip_data, ub zip_len);
dave_bool t_rpc_ver3_unzip_IPBaseInfo_d(IPBaseInfo *unzip_data, ub unzip_len, void *pArrayBson);

#endif

