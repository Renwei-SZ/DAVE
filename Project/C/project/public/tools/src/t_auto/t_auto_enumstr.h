/*
 * Copyright (c) 2022 Renwei
 *
 * This is a free software; you can redistribute it and/or modify
 * it under the terms of the MIT license. See LICENSE for details.
 *
 * ############################# IMPORTANT INFORMATION ############################
 * The code of this file is automatically generated by tools(Tools/auto_code),
 * please do not modify it manually!
 * ############################# IMPORTANT INFORMATION ############################
 * ================================================================================
 */

#ifndef __T_AUTO_ENUMSTR__
#define __T_AUTO_ENUMSTR__
#include "dave_base.h"
#include "database_msg.h"
#include "cv_param.h"
#include "dave_enum.h"
#include "dave_error_code.h"
#include "dave_mcard.h"
#include "nlp_param.h"
#include "http_param.h"
#include "uip_msg.h"
#include "base_ramkv.h"
#include "base_thread.h"
#include "base_enum.h"
#include "base_retcode.h"
#include "base_rxtx.h"
#include "rxtx_param.h"
#include "socket_parameters.h"
#include "thread_chain.h"
#include "sync_param.h"
#include "sync_type.h"

s8 *t_auto_AIPlaceType_str(AIPlaceType enum_value);
s8 *t_auto_BaseMsgType_str(BaseMsgType enum_value);
s8 *t_auto_BuildingBlocksOpt_str(BuildingBlocksOpt enum_value);
s8 *t_auto_CVSearchOpt_str(CVSearchOpt enum_value);
s8 *t_auto_ChainType_str(ChainType enum_value);
s8 *t_auto_CountryCode_str(CountryCode enum_value);
s8 *t_auto_CurrencyType_str(CurrencyType enum_value);
s8 *t_auto_DaveDataType_str(DaveDataType enum_value);
s8 *t_auto_EnableKeepAliveFlag_str(EnableKeepAliveFlag enum_value);
s8 *t_auto_EnableNetCardBindFlag_str(EnableNetCardBindFlag enum_value);
s8 *t_auto_ErrCode_str(ErrCode enum_value);
s8 *t_auto_FRAMETYPE_str(FRAMETYPE enum_value);
s8 *t_auto_FRAME_TYPE_str(FRAME_TYPE enum_value);
s8 *t_auto_FileOptFlag_str(FileOptFlag enum_value);
s8 *t_auto_FixedPortFlag_str(FixedPortFlag enum_value);
s8 *t_auto_GPSBaseLocation_str(GPSBaseLocation enum_value);
s8 *t_auto_HTTPListenType_str(HTTPListenType enum_value);
s8 *t_auto_HTTPMathcRule_str(HTTPMathcRule enum_value);
s8 *t_auto_HttpContentType_str(HttpContentType enum_value);
s8 *t_auto_HttpMethod_str(HttpMethod enum_value);
s8 *t_auto_IOStackType_str(IOStackType enum_value);
s8 *t_auto_IPProtocol_str(IPProtocol enum_value);
s8 *t_auto_IPVER_str(IPVER enum_value);
s8 *t_auto_KvAttrib_str(KvAttrib enum_value);
s8 *t_auto_LanguageCode_str(LanguageCode enum_value);
s8 *t_auto_MCardContentType_str(MCardContentType enum_value);
s8 *t_auto_MCardIdentityType_str(MCardIdentityType enum_value);
s8 *t_auto_MCardSource_str(MCardSource enum_value);
s8 *t_auto_MCardTimeType_str(MCardTimeType enum_value);
s8 *t_auto_MCardType_str(MCardType enum_value);
s8 *t_auto_MCardVer_str(MCardVer enum_value);
s8 *t_auto_MatrixOpt_str(MatrixOpt enum_value);
s8 *t_auto_MsgMemState_str(MsgMemState enum_value);
s8 *t_auto_NLPDependencySyntax_str(NLPDependencySyntax enum_value);
s8 *t_auto_NLPIRLabel_str(NLPIRLabel enum_value);
s8 *t_auto_NLPNEREntity_str(NLPNEREntity enum_value);
s8 *t_auto_NLPPartOfSpeech_str(NLPPartOfSpeech enum_value);
s8 *t_auto_NLPSemanticRole_str(NLPSemanticRole enum_value);
s8 *t_auto_NetAddrType_str(NetAddrType enum_value);
s8 *t_auto_ORDER_CODE_str(ORDER_CODE enum_value);
s8 *t_auto_PythonFun_str(PythonFun enum_value);
s8 *t_auto_ReqType_str(ReqType enum_value);
s8 *t_auto_RetCode_str(RetCode enum_value);
s8 *t_auto_SOCCNTTYPE_str(SOCCNTTYPE enum_value);
s8 *t_auto_SOCDOMAIN_str(SOCDOMAIN enum_value);
s8 *t_auto_SOCEVENT_str(SOCEVENT enum_value);
s8 *t_auto_SOCKETINFO_str(SOCKETINFO enum_value);
s8 *t_auto_SOCKETTYPE_str(SOCKETTYPE enum_value);
s8 *t_auto_SOCTYPE_str(SOCTYPE enum_value);
s8 *t_auto_SYNCType_str(SYNCType enum_value);
s8 *t_auto_SyncServerType_str(SyncServerType enum_value);
s8 *t_auto_TaskAttribute_str(TaskAttribute enum_value);
s8 *t_auto_TraceLevel_str(TraceLevel enum_value);
s8 *t_auto_UIPType_str(UIPType enum_value);
s8 *t_auto_RPCMSG_str(RPCMSG enum_value);

#endif
