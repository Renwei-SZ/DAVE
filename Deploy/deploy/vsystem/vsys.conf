vsys {
  # Path Settings
  directory = /tmp/devvsys
  data-directory = /tmp/devvsys/levelDB

  # Application logging level. Could be DEBUG | INFO | WARN | ERROR. Default value is INFO.
  logging-level = INFO

  # P2P Network settings
  network {
    # TODO
    # update port to 19923 for peer node conf
    known-peers = ["172.17.0.3:19924"]

    black-list-residence-time = 30s
    peers-broadcast-interval = 5s
    connection-timeout = 30s

    # Network address
    bind-address = "0.0.0.0"

    # Port number
    # TODO
    # set port to 19924 for peer node conf
    port = 19923

    # How many network inbound network connections can be made
    max-inbound-connections = 60

    # Number of outbound network connections
    max-outbound-connections = 60

    # Network buffer size
    outbound-buffer-size = 16M

    # Node name to send during handshake. Comment this string out to set random node name.
    # node-name = "DEV NET node"

    # String with IP address and port to send as external address during handshake. Could be set automatically if uPnP is enabled.
    # TODO
    # set port to 19924 if peer port is 19923 and vice versa
    declared-address = "localhost:19923"
  }

  # Wallet settings
  wallet {
    # Password to protect wallet file
    # password = ""

    # Wallet seed as string
    # TODO
    # Fill in the seed generated when generating the Test Net Wallet
    seed = "couple embark middle pizza column flee pumpkin oil best enable settle canvas joy submit clerk"
  }

  # Blockchain settings
  blockchain {
    type = CUSTOM
    custom {
      address-scheme-character = T

      functionality {
        allow-deposit-withdraw-contract-after-height = 1
        num-of-slots = 60
        minting-speed = 1
        allow-contract-transaction-after-height = 1
        allow-exchange-contract-after-height = 1
      }
      
      # TODO
      # Fill the data generated when generating the Gensis block data
      genesis {
        timestamp = 1637202777244268137
        block-timestamp = 1637202777244268137
        signature = 5A1VFp9YY2Wy4JXCZapNLLwnBKwkgKwhz4jE3aoqn67dDbXFn24F7arkqTuy8kUqYJrBJ4cg5XQetagQqEKAcNTc
        initial-balance =  500000000000000000
        initial-mint-time = 1637202777000000000
        average-block-delay = 60s
        transactions = [
          {recipient = AUF5GefdSEQDDYbE1n8kKMZrY9iDfHx7FXf, amount = 50000000000000000, slot-id = 0}
          {recipient = ATuyQv5UH38PbW79cCVXc38R4LQngNSPBq7, amount = 50000000000000000, slot-id = 6}
          {recipient = AU4w46MCZD6gocwsNR6KmRL1f6gGWzLZJBS, amount = 50000000000000000, slot-id = 12}
          {recipient = AU9BxWS9Umi2c4GeNBbR6cDuy6gqNPzcPab, amount = 50000000000000000, slot-id = 18}
          {recipient = ATwuXmb7VoFFRMR56KYNGNrqdm9Bdpybzyb, amount = 50000000000000000, slot-id = 24}
          {recipient = ATubsDsxi4poFE18w1Wdu2gmGCfFLCDiGW2, amount = 50000000000000000, slot-id = 30}
          {recipient = ATxrqtk8aqYDrZjsonb2JtM3ZFwunj5ZUXr, amount = 50000000000000000, slot-id = 36}
          {recipient = AU7674cFESzon32ZhESSzLYSe4eYQQmy6wT, amount = 50000000000000000, slot-id = 42}
          {recipient = ATrwJvhcfLNfLbgpvuPgc3yn2kSDYEF7ZFE, amount = 50000000000000000, slot-id = 48}
          {recipient = AUF1My2dyQ3axBc3TsSSBX1djaSFXXRKzh4, amount = 50000000000000000, slot-id = 54}
        ]
      }
    }
    state {
      # turn on/off the state of transactions grouped by address and transaction type 
      tx-type-account-tx-ids = off
      tx-contract-tx-ids = off
    }
  }

  # Matcher settings
  matcher.enable = no

  # Minter settings
    # Minter settings
    miner {
        enable = yes
        offline = no
        quorum = 1
        generation-delay = 1s
        interval-after-last-block-then-generation-is-allowed = 120h
        tf-like-scheduling = no
        reward-address = ""
    }

  # Node's REST API settings
  rest-api {
    # Disable node's REST API
    enable = yes

    # For security reasons, bind to local interface only
    bind-address = "0.0.0.0"

    # Port to listen to REST API requests
    # TODO
    # You can customise the port. Just ensure that the minter node & the peer node use different ports
    port = 8080

    # Hash of API key string
    # TODO
    # Fill in the hash obtained from the result of generating API key hash
    api-key-hash = "CRWotTc5sJPXmynD3cfwzH1F8qdYEbeF8GwzYv3sPD33"

    # Enable/disable CORS support
    cors = yes

    # Enable/disable custom http api routes
    custom-api {
      # Routes with "/transactions"
      transactions {
        address-transaction-count = off
        address-transaction-list = off
      }

      # Routes with "/addresses"'
      addresses {
      }

      # Routes with "/node"
      node {
      }

      # Routes with "/blocks"
      blocks {
      }

      # Routes with "/utils"
      utils {
      }

      # Routes with "/contracts"
      contracts {
      }
    }

  }

  checkpoints.public-key = "A9MX22tXpNdTTx5wBf3CunZz299c1nnca6kH3MzL312L"
}